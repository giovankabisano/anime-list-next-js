import Head from 'next/head'
import InfiniteScroll from 'react-infinite-scroll-component';
import { useQuery } from "@apollo/client";
import media from "./api/media";
import { useMemo, useState, useEffect } from 'react';
import Navbar from '@/components/Navbar';

export default function Home() {
  const [posts, setPosts] = useState([]);
  const [page, setPage] = useState(1);

  const { data } = useQuery(media, {
    variables: {
      page: page,
    },
    fetchPolicy: 'network-only'
  });

  useEffect(() => {
    const newPosts = data?.Page?.media || []
    if (newPosts.length > 0) {
      setPosts((post) => [...post, ...newPosts]);
    }
  }, [data])

  const handleFetchMore = () => {
    setPage((prevValues) => prevValues + 1);
  };

  return (
    <>
      <Head>
        <title>Anime List!</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <main>
        <div class="relative flex min-h-screen flex-col justify-center overflow-hidden bg-gray-50">
          <div class="absolute inset-0 bg-[url(/img/grid.svg)] bg-center [mask-image:linear-gradient(180deg,white,rgba(255,255,255,0))]"></div>
          <div class="relative bg-white px-6 pt-10 pb-8 shadow-xl ring-1 ring-gray-900/5 mx-auto w-4/6 sm:rounded-lg sm:px-10">
            <div>
              <h1 className='m-2'>Trending List!</h1>
              <div className='mt-6'>
                <InfiniteScroll
                  dataLength={posts.length}
                  next={handleFetchMore}
                  hasMore={true}
                  loader={<h4>Loading...</h4>}
                  endMessage={
                    <p style={{ textAlign: 'center' }}>
                      <b>Yay! You have seen it all</b>
                    </p>
                  }
                >
                  {posts?.map((data) => (
                    <div key={data?.id}>
                      <div>
                        <strong> {data?.id}</strong> {data.title?.userPreferred}
                      </div>
                    </div>
                  ))}
                </InfiniteScroll>
              </div>
            </div>
          </div>
        </div>
      </main>
    </>

  )
}
